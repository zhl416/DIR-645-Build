name: Build Padavan Firmware

on:
  workflow_dispatch:
    inputs:
      device:
        description: 'Select device to build'
        required: true
        default: 'dir-645_a1'
        type: choice
        options:
        - dir-645_a1

env:
  REPO_URL: https://github.com/hanwckf/rt-n56u.git
  REPO_BRANCH: master
  WORK_DIR: /home/runner/work/build-padavan

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Initialize Work Directory
      run: |
        sudo mkdir -p $WORK_DIR
        sudo chown $USER:$USER $WORK_DIR
        cd $WORK_DIR
        echo "Current directory: $(pwd)"

    - name: Initialize Build Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt-get -y install unzip libtool-bin curl cmake gperf gawk flex bison nano \
        xxd python3-docutils gettext automake autopoint texinfo build-essential help2man \
        pkg-config zlib1g-dev libgmp3-dev libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev \
        wget libc-dev-bin gcc-multilib g++-multilib libssl-dev libxml-parser-perl \
        python3 python3-distutils python3-setuptools libtool autoconf automake gcc \
        make git device-tree-compiler

    - name: Clone Source Code
      working-directory: ${{ env.WORK_DIR }}
      run: |
        echo "Current directory: $(pwd)"
        git clone --depth=1 $REPO_URL
        cd rt-n56u
        git submodule update --init --recursive
        echo "Repository contents:"
        ls -la

    - name: Build Toolchain
      working-directory: ${{ env.WORK_DIR }}/rt-n56u/toolchain
      run: |
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        chmod +x build_toolchain.sh
        sudo ./build_toolchain.sh

    - name: Checkout Config Files
      uses: actions/checkout@v3
      with:
        path: 'configs'

    - name: Copy Config File
      working-directory: ${{ env.WORK_DIR }}
      run: |
        echo "Current directory: $(pwd)"
        cp ../configs/configs/${{ github.event.inputs.device }}.config rt-n56u/trunk/.config

    - name: Build Firmware
      working-directory: ${{ env.WORK_DIR }}/rt-n56u/trunk
      run: |
        echo "Current directory: $(pwd)"
        chmod +x clear_tree.sh
        chmod +x build_firmware.sh
        ./clear_tree.sh
        ./build_firmware.sh

    - name: Upload Build Logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: build_logs
        path: ${{ env.WORK_DIR }}/rt-n56u/trunk/*.log
        if-no-files-found: warn

    - name: Upload Firmware
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: ${{ github.event.inputs.device }}_firmware
        path: ${{ env.WORK_DIR }}/rt-n56u/trunk/images/*.trx
        if-no-files-found: error

    - name: Generate Release Tag
      id: tag
      if: success()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"

    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: success()
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        files: ${{ env.WORK_DIR }}/rt-n56u/trunk/images/*.trx
        generate_release_notes: true
