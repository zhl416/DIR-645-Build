name: Build Padavan Firmware

on:
  workflow_dispatch:
  watch:
    types: [started]

env:
  REPO_URL: https://github.com/hanwckf/rt-n56u.git
  REPO_BRANCH: master
  TOOLCHAIN_URL: https://github.com/hanwckf/padavan-toolchain/releases/download/v1.1/mipsel-linux-uclibc.tar.xz
  WORK_DIR: /home/runner/work/build-padavan
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    # ... 前面的步骤保持不变 ...

    - name: 准备固件配置
      run: |
        echo "=== 准备编译配置 ==="
        cd ${{ env.WORK_DIR }}/rt-n56u/trunk
        cp configs/templates/dir-645.config .config
        echo "配置文件已复制"
        
    - name: 编译固件
      run: |
        echo "=== 开始编译固件 ==="
        cd ${{ env.WORK_DIR }}/rt-n56u/trunk
        echo "清理编译环境..."
        ./clear_tree.sh
        
        echo "开始编译..."
        fakeroot ./build_firmware.sh
        
        echo "检查编译结果..."
        ls -la images/

    - name: 上传固件
      uses: actions/upload-artifact@v3
      with:
        name: Padavan_firmware
        path: ${{ env.WORK_DIR }}/rt-n56u/trunk/images/*.trx
        if-no-files-found: error

    - name: 创建发布
      uses: softprops/action-gh-release@v1
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ github.run_number }}
        name: Padavan固件 ${{ github.run_number }}
        files: ${{ env.WORK_DIR }}/rt-n56u/trunk/images/*.trx
        body: |
          ### 自动编译完成
          - 编译时间：${{ env.TZ }}
          - 编译版本：${{ github.run_number }}
          
          固件文件在上方 Assets 中下载
